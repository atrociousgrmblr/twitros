{"name":"TwitROS","tagline":"Twitter for ROS! ","body":"TwitROS\r\n=======\r\n\r\n[Twitter] [8] driver for [ROS] [2] in python.\r\nImplemented using [twython] [1]. \r\nDevelopped at [IntRoLab] [4].\r\n\r\nPlease note that this project in still in its early stage of creation and \r\nis unstable at the moment.\r\n\r\nDependencies\r\n---\r\n\r\nTwitROS uses [twython] [1] as its twitter library:\r\n\r\n    (pip install | easy_install) twython beautifulsoup4\r\n\r\nInstallation\r\n---\r\n\r\nAfter cloning, you can build twitros by running:\r\n\r\n    rosmake twitros\r\n\r\nDon't forget to make the python files runable:\r\n    \r\n    roscd twitros\r\n    chmod +x src/twitter.py\r\n\r\nRunning the Twitter server\r\n---\r\n\r\nWe provide a sample launchfile you can run. In this one, OAuth ROS \r\nparameters are not set so you will be prompted to create a token.\r\nYou can then copy the generated token and use it later through `rosparam`\r\n(see next section).\r\n\r\n    roslaunch twitros twitter.launch\r\n    \r\nIf OAuth is a success, you should see your name appears under the form:\r\n<pre>Twitter connected as NAME (@SCREEN_NAME)!</pre>\r\n\r\nUsing OAuth\r\n---\r\n\r\nOnce you have your token you can use it by setting the `token` \r\nand `token_secret` parameters:\r\n\r\n<pre><code>&lt;launch>\r\n    &lt;node name=\"twitros\" pkg=\"twitros\" type=\"twitter.py\" output=\"screen\">\r\n        &lt;rosparam name=\"token\" value=\"PUT_KEY_HERE\"/>\r\n        &lt;rosparam name=\"token_secret\" value=\"PUT_SECRET_HERE\"/>\r\n\t&lt;/node>\r\n&lt;/launch></code></pre>\r\n\r\nServices provided\r\n---\r\n\r\nThe driver provides the following services at the moment:\r\n\r\n* `post_tweet`: Post a tweet. You can also mark it as a reply. Return the\r\ntweet id. See section about image posting.\r\n* `retweet`: Retweet a tweet given its id.\r\n* `follow`: Follow a user.\r\n* `unfollow`: Unfollow a user.\r\n* `post_dm`: Send a direct message to a user. Return an id. \r\nSee section about image posting.\r\n* `destroy_dm`: Destroy a direct message given its id.\r\n* `user_timeline`: Return the timeline of a user (array of tweets).\r\n\r\nYou can get more info by reading the services in `twitros_msgs/srv` folder.\r\n\r\nTopics published\r\n---\r\n\r\nNew tweets are retrieved at a variable rate depending on [API limits] [5].\r\nCurrent rate limits allow a message to be published every minute \r\napproximatively.\r\nEach of the following bullets represents a topic that publishs \r\n`twitros_msgs/Tweets` messages.\r\nThe server succesfully retrieves images (saving to `/tmp` then deleting) \r\nand converts them to `sensors_msgs/Image` using [OpenCV] [6] \r\nand [cv_bridge] [7].\r\n\r\n* `home_timeline`: tweets from your timeline.\r\n* `mentions`: tweets that mention you.\r\n* `direct_messages`: your direct messages. *Note:* Tweet and Direct message \r\nuse the same `twitros_msgs/Tweet` message structure.\r\n\r\nYou can get more info by reading the messages in `twitros_msgs/msg` folder.\r\n\r\nROS parameters\r\n---\r\nParameters you can set:\r\n\r\n* `latch`: Topics latch tweets. (default: <code>false</code>).\r\n* `replace_dm`: If it's not possible to send a direct message, replace by\r\nsend a public tweet under the form:\r\n<pre>@USER TEXT</pre> \r\nIt can be useful since you can't send a direct message to someone not \r\nfollowing you. (default: <code>false</code>).\r\n\r\nScript\r\n---\r\nSome test scripts are given in `twitros/scripts/`.\r\n\r\n* `tweet.py`: Post a tweet with images\r\n* `direct_message.py`: Post a tweet with images\r\n\r\nImages posting\r\n---\r\nTwitter support only image posting in tweets and only one image can be \r\njoined per tweets. `twitros` enables to post multiple images indirectly \r\nby hosting them on [postimage] [9]. [postimage] [9] is always used when\r\nyou add image to a `twitros_msgs/DirectMessage` request and add the\r\ngallery url at the end of the tweet. On `twitros_msgs/Post` requests,\r\nit will use [postimage] [9] only if there is more than one.\r\n\r\n[1]: https://github.com/ryanmcgrath/twython \"Twython\"\r\n[2]: http://ros.org \"ROS\"\r\n[3]: http://www.pip-installer.org \"pip\"\r\n[4]: http://introlab.3it.usherbrooke.ca \"Introlab\"\r\n[5]: https://dev.twitter.com/docs/rate-limiting/1.1 \"Twitter rate limiting\"\r\n[6]: http://opencv.willowgarage.com/documentation/python/reading_and_writing_images_and_video.html \"OpenCV python Load/Save\"\r\n[7]: https://ros.org/wiki/cv_bridge \"cv_bridge wiki\"\r\n[8]: http://twitter.com \"Twitter\"\r\n[9]: http://postimage.org \"PostImage, free image hosting.\"\r\n","google":"UA-39917555-1","note":"Don't delete this file! It's used internally to help with page regeneration."}